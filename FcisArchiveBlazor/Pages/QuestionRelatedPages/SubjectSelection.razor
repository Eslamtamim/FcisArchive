@page "/s/{subject}"
@inject ApplicationDbContext _dbcontext
@inject IMemoryCache cache

<style>
    @@media (max-width: 1000px) {
        #lecs {
            flex-direction: column;
        }
    }
</style>

<h3>@subject</h3>

@if (_lectures is null)
{
    <Loading />
}
else if (!_lectures.Any())
{
    <div class="alert alert-danger" role="alert">
        no lectures yet
    </div>
}
else
{
    <div class="d-flex justify-content-between flex-column">
        <div class="d-flex justify-content-around mt-5" id="lecs">
            <img width="260" alt="subject photo cover" src="/SubjectsPhotos/@(subject).png" />

            <div class="d-flex flex-wrap justify-content-sm-around align-content-center">

                @foreach (var lecture in _lectures)
                {
                    <a class="btn btn-outline-secondary fw-bold m-2 p-2" href="/s/@subject/@lecture?page=1">
                        @lecture
                    </a>
                }
            </div>
        </div>
        <MadeWithLove />
    </div>

}



@code {

    [Parameter]
    public string subject { get; set; }

    [Parameter]
    public int Year { get; set; }

    List<string> _lectures;

    protected override Task OnInitializedAsync()
    {
        _lectures = cache.GetOrCreate("lectures" + subject, (entry) =>
         {
             entry.AbsoluteExpirationRelativeToNow = TimeSpan.FromDays(1);
             return _dbcontext.lectures.Where(x => x.Subject.Name == subject).Select(l => l.Name).ToList();
         });
        return base.OnInitializedAsync();
    }

}